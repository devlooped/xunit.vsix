# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types: [released]

env:
  DOTNET_NOLOGO: true
  Configuration: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ✓ ensure format
        run: dotnet format --verify-no-changes -v:diag --exclude ~/.nuget

      - name: ⚙ msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: ≥ version
        if: github.event_name == 'release'
        shell: bash
        run: echo "Version=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: ≥ version label
        shell: bash
        run: echo "VersionLabel=$GITHUB_REF.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        
      - name: 🙏 build
        run: msbuild -r -m:1

      - name: 📦 pack
        if: always()
        run: dotnet pack --no-build -m:1

      - name: 🧪 test
        timeout-minutes: 10
        uses: ./.github/workflows/test

      - name: 📦 artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: dumps-${{ github.run_number }}
          path: ./**/*.dmp

      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: always() && env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"

      # Only push CI package to nuget.org for releases
      - name: 🚀 nuget
        if: github.event_name == 'release'
        run: dotnet nuget push bin\*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
