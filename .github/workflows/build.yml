# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true
  Configuration: Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ✓ ensure format
        run: dotnet format --verify-no-changes -v:diag --exclude ~/.nuget

      - name: ⚙ msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: 🙏 build
        run: msbuild -r -m:1 -p:VersionLabel="$env:GITHUB_REF.$env:GITHUB_RUN_NUMBER"

      - name: 📦 pack
        if: always()
        run: dotnet pack --no-build -m:1 -p:VersionLabel="$env:GITHUB_REF.$env:GITHUB_RUN_NUMBER"

      - name: 🛠 vs
        run: dotnet tool install -g dotnet-vs

      - name: 🧪 unit tests
        working-directory: src/Xunit.Vsix.Tests
        run: |
          msbuild -r -m:1 -p:PkgBin="$env:GITHUB_WORKSPACE\bin" -p:VersionLabel="$env:GITHUB_REF.$env:GITHUB_RUN_NUMBER" -bl:.\..\..\out\test.binlog
          dotnet test --no-build --filter "Vsix!=true" --blame-hang-timeout 5m --blame-hang-dump-type full -r .\..\..\out

      - name: 🛠 vs
        run: |
          dotnet tool install -g dotnet-vs
          vs /NoSplash /ResetSettings General /Command "File.Exit"
          wait-process -name 'devenv'
          vs

      - name: 🧪 integration tests
        working-directory: src/Xunit.Vsix.Tests
        run: |
          dotnet test --no-build --filter "Vsix=true" --blame-hang-timeout 10m --blame-hang-dump-type full -r .\..\..\out

      - name: ❎ vs
        run: vs kill all

      - name: 📦 artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: tests-${{ github.run_number }}
          path: .\out

      # Only push CI package to sleet feed if building on ubuntu (fastest)
      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: always() && env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"
